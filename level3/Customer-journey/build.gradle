// In this section you declare where to find the dependencies of your project
repositories {
	 // This is meven repo
	maven { url 'https://repo.maven.apache.org/maven2/'}
}

buildscript {
	ext {
		springBootVersion = '2.1.6.RELEASE' 
	}
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		//classpath 'com.palantir:jacoco-coverage:0.4.0'
	}
}

//Plugins
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.palantir.jacoco-full-report'
apply plugin: 'jacoco'
apply plugin: 'application'

sourceCompatibility = 1.8

ext {
	springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
	// This dependency is exported to consumers, that is to say found on their compile classpath.
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.springframework.cloud:spring-cloud-starter-sleuth') 
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-test')
	compile('org.apache.commons:commons-lang3')
	compile('commons-beanutils:commons-beanutils:1.9.3')
	compile('com.h2database:h2:1.4.199')
	compile('com.fasterxml.jackson.core:jackson-databind')
	
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jacoco {
  toolVersion = "0.8.2"
}

jacocoTestCoverageVerification {
  violationRules {

    rule {
      element = 'CLASS'
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 1.0
      }
      excludes = [
          'io.reflectoring.coverage.part.PartlyCovered',
          'io.reflectoring.coverage.ignored.*',
          'io.reflectoring.coverage.part.NotCovered',
          'com.java.security.*',
          'com.java.AccessingDataJpaApplication'
      ]
    }
  }

}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

